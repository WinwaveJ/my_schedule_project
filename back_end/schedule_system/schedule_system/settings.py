"""
Django settings for schedule_system project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-$7@@7zbwurm(u-ef@j!2lw_ci#yxpc0+=es@$x6#v&6nowo=t9"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

AUTH_USER_MODEL = "users.User"  # 告诉 Django 使用自定义的用户模型


# Application definition

INSTALLED_APPS = [
    # 系统内置核心组件（Django 原生功能）
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # 第三方库
    "rest_framework",  # REST API 支持，对应 PyPI 包名 djangorestframework
    "rest_framework_simplejwt",  # JWT 认证，对应 PyPI 包名 djangorestframework-simplejwt
    # 本地应用
    "users.apps.UsersConfig",  # 用户管理模块（使用应用配置类）
    "tasks.apps.TasksConfig",  # 任务管理模块
    "activities.apps.ActivitiesConfig",  # 活动管理模块
    "reminders.apps.RemindersConfig",  # 提醒管理模块
    "data_stats.apps.DataStatsConfig",  # 统计分析模块
    "backups.apps.BackupsConfig",  # 数据备份模块
    "settings.apps.SettingsConfig",  # 系统设置模块
]

from rest_framework_simplejwt.settings import api_settings

# 修改 USER_ID_FIELD 配置
api_settings.USER_ID_FIELD = "user_id"

# 配置 DRF 认证方式
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
}

# 配置 JWT 参数（可选但推荐）
from datetime import timedelta

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=30),  # 访问令牌有效期
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),  # 刷新令牌有效期
    "ROTATE_REFRESH_TOKENS": True,  # 刷新令牌是否可循环使用
}

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "schedule_system.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "schedule_system.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': BASE_DIR / 'db.sqlite3',
        "ENGINE": "django.db.backends.mysql",  # 数据库引擎
        "NAME": "schedule_system",  # 数据库名
        "USER": "django_user",  # 用户名
        "PASSWORD": "jackie1004",  # 密码
        "HOST": "localhost",  # 数据库主机（默认本地）
        "PORT": "3306",  # 数据库端口（默认3306）
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
